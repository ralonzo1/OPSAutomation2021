"""
Django settings for OPSAutomation project.

Generated by 'django-admin startproject' using Django 3.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path
from django.contrib.messages import constants as messages

#from .views.main import overview
project = "OPSAutomation"
projdir = "OPSAutomation"

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE = os.path.abspath(os.path.join(os.path.dirname(__file__), "..", ".."))
PROJECT_BASE = os.path.realpath(os.path.dirname(__file__))
UI_UX = os.path.abspath(os.path.join(PROJECT_BASE, "..", "ui-ux"))
nppd = os.path.abspath(os.path.join(BASE, project))
OPSAutomation = os.path.abspath(os.path.join(nppd, projdir))

BASE_DIR = Path(__file__).resolve().parent.parent
LOGIN_REDIRECT_URL = "overview"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-m-xej8^fxy3=5-v4yc&_@^3g^57-k82+n82ui-4g66ke1!9t2^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    "widget_tweaks",
    'ckeditor',
    'ckeditor_staticfiles',
    'ckeditor_uploader',
    # OPSAutomation App Imports
    #'okta_oauth2.apps.OktaOauth2Config',
    'OPSAutomation',
    'registration',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # PRODUCTION ONLY
    #'okta_oauth2.middleware.OktaMiddleware',
]

ROOT_URLCONF = 'OPSAutomation.urls'
MEDIA_ROOT = os.path.join(PROJECT_BASE, 'media/')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [UI_UX],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

#AUTHENTICATION_BACKENDS = () # This is for production ONLY
AUTHENTICATION_BACKENDS = (
    ### DEVELOPMENT ONLY
    "django.contrib.auth.backends.ModelBackend",
    # "allauth.account.auth_backends.AuthenticationBackend",

    ### PRODUCTION ONLY
    #"okta_oauth2.backend.OktaBackend",
)

ACCOUNT_FORMS = {
    "login": "registration.forms.LoginForm",
    "register": "registration.forms.RegisterForm",
    "change_password": "registration.forms.ChangePasswordForm",
    "set_password": "registration.forms.SetPasswordForm",
    "reset_password": "registration.forms.ResetPasswordForm",
}

WSGI_APPLICATION = 'OPSAutomation.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

OKTA_AUTH = {
    "ORG_URL": "https://your-org.okta.com/",
    "ISSUER": "https://your-org.okta.com/oauth2/default",
    "CLIENT_ID": "yourclientid",
    "CLIENT_SECRET": "yourclientsecret",
    "SCOPES": "openid profile email offline_access", # this is the default and can be omitted
    "REDIRECT_URI": "http://localhost:8000/accounts/oauth2/callback",
    "LOGIN_REDIRECT_URL": "/", # default
    "CACHE_PREFIX": "okta", # default
    "CACHE_ALIAS": "default", # default
    "PUBLIC_NAMED_URLS": (), # default
    "PUBLIC_URLS": (), # default
    "USE_USERNAME": False, # default
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(OPSAutomation, "static")

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE, "media")

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CRISPY_TEMPLATE_PACK = "bootstrap4"

CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_CONFIGS = {
    "default": {
        "toolbar_Full": [
            [
                "Styles",
                "Format",
                "Bold",
                "Italic",
                "Underline",
                "Strike",
                "SpellChecker",
                "Undo",
                "Redo",
            ],
            ["Link", "Unlink", "Anchor"],
            ["Image", "Table", "HorizontalRule"],
            ["TextColor", "BGColor"],
            ["JustifyLeft", "JustifyCenter", "JustifyRight", "JustifyBlock"],
            ["NumberedList", "BulletedList"],
            ["Indent", "Outdent"],
            ["Maximize"],
        ],
    },
}
APPEND_SLASH = True
MESSAGE_TAGS = {
    messages.ERROR: "danger",
}
